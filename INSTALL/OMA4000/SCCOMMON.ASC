;************************************************************************
;*                                                                      *
;* SCCOMMON.ASC                                                         *
;* This file contains code common to single shift register detectors    *
;*                                                                      *
;************************************************************************

;************************************************************************
;*                                                                      *
;* Routine: INIT                                                        *
;* Purpose: To initialise the FC processor and the detector,            *
;*          and to synchronise with the DMA and DAC processors.         *
;*                                                                      *
;************************************************************************

LCICNFG EQU 0

;********  Frame Control program  ***************************************

FCINIT  FC_BLOCK

        WAIT
        LDCFG   DCADDR | QNS | XMIT13 | REC18 | RECTRIG | RECTEMP
        LDTRKL  NUMSERIAL                       ! TRACKLEN
        LDPCNT  DB_PREC                         ! PCNT

        WAIT
        LOAD    AD_BD | MS10 ! SCITC_SET

        WAIT
        LOAD    CLKBIAS_BD | A_CHANNEL | RS_XYZ ! BIAS_AB

        WAIT
        LOAD    SHUTTER_BD | INT_SHUTTER        ! LCI_CONFIG

        WAIT
        LOAD    AN_PROC_BD | ACHANNEL           ! APROC_AB

        WAIT
        LOAD    DET_CNTL_BD | NO_LOOPBACK

        LDCNTRA 100

FCINT1  WAIT                                    ;Send NOPs to kill time.
        LOAD    NO_OP
        JUNTILA FCINT1

        WAIT                                    ;Sync FC $ DC Ends.
        LOAD    NO_OP | CUE
        END

;********  DMA Control program  ****************************************

DCSYNC  DMA_BLOCK

        WAIT                                    ;Sync FC $ DC Ends.
        LOAD   NOTHING
        END

;************************************************************************
;*                                                                      *
;* Routine: IDNT                                                        *
;* Purpose: To identify the detector hardware attached to the           *
;*          controller.                                                 *
;*                                                                      *
;************************************************************************

;*
;******************************************************************
;*

FCIDNT  FC_BLOCK

        WAIT
        LOAD    DET_CNTL_BD | NO_LOOPBACK

        WAIT
        LOAD    SHUTTER_BD | INT_SHUTTER  | CUE | RPP_RTP

        WAIT
        LOAD    DET_CNTL_BD | NO_LOOPBACK | CUE | IPP

        LDCNTRA 100

FCIDNT1 WAIT                                    ;Send NOPs to kill time.
        LOAD    NO_OP
        JUNTILA FCIDNT1

        WAIT                                    ;Sync FC $ DC Ends.
        LOAD    NO_OP | CUE
        END

;************************************************************************
;*                                                                      *
;* Routine: IDX                                                         *
;* Purpose: To identify a split mode controller                         *
;*                                                                      *
;************************************************************************

;*
;******************************************************************
;*
FCIDX   FC_BLOCK

        WAIT
        LOAD    NO_OP
        LDCFG   DCADDR | SPLTMOD | XMIT14 | REC18 | RECTRIG | RECTEMP
        WAIT
        LOAD    NO_OP
        LDTRKL  NUMSERIAL
        WAIT
        LOAD    NO_OP
        LDPCNT  DB_PREC | NUMSERIAL * 2

        WAIT
        LOAD    $2100 | MS10                    ;2100 is A/D Board

        WAIT
        LOAD    $2400 | A_CHANNEL | RS_XYZ      ;2400 is Clock/Bias

        WAIT
        LOAD    $2600 | INT_SHUTTER             ;2600 is Shutter/Pulser

        WAIT
        LOAD    $2000 | ACHANNEL                ;2000 is Analog Processor

        WAIT
        LOAD    $2F00 | NO_LOOPBACK             ;2F00 is Detector Controller

        LDCNTRA 100

FCIDX1  WAIT                                    ;Send NOPs to kill time.;Send NOPs to kill time.
        LOAD    NO_OP
        JUNTILA FCIDX1

        WAIT
        LOAD    $2600 | INT_SHUTTER  | CUE | RPP_RTP

        WAIT
        LOAD    $2F00 | NO_LOOPBACK | CUE | IPP

        LDCNTRA 100

FCIDX2  WAIT                                    ;Send NOPs to kill time.
        LOAD    NO_OP
        JUNTILA FCIDX2

        WAIT                                    ;Sync FC $ DC Ends.
        LOAD    NO_OP | CUE
        END

;********  DMA Control program  ****************************************

DCIDNT  DMA_BLOCK

        WAIT
        LOAD   REPLACE | LD_ADDR                ;Store detector ID

        WAIT
        LOAD   REPLACE                          ;Store Shutter ID

        WAIT                                    ;Sync FC $ DC Ends.
        LOAD   NOTHING
        END

;******************************************************************
;*                                                                *
;* This block is (I hope!) never executed.  The LDCNTRA instrux   *
;* are there so that the counter values will be in the right      *
;* place for get_ASIC_counter.  The counter values give info      *
;* about the intended use of this ASIC program file, such as the  *
;* intended detector's ACITVEX and ACTIVEY and identification     *
;* byte.                                                          *
;*                                                                *
;******************************************************************

FCCONF  FC_BLOCK
        LDCNTRA  NUMIMAGE    ! IACTIVE      ;ActiveY
        LDCNTRA  NUMSERIAL   ! SACTIVE      ;ActiveX
        LDCNTRA  IMAGE_LEAD  ! DUMYLD
        LDCNTRA  IMAGE_LAST  ! DUMYTR
        LDCNTRA  SERIAL_LEAD ! DUMXLD
        LDCNTRA  SERIAL_LAST ! DUMXTR
        LDCNTRA  ID_CODE     ! DET_ID

        END

;****************************************************************

CLEANSR FC_BLOCK                  ! SER_CLEAN
        LDCNTRB TOTAL_SERIAL      ! S_TOTAL

CLEAN1  WAIT                                     ;Trash all data points.
        LOAD    TP
        JUNTILB CLEAN1
        
        WAIT
        LOAD    NO_OP

        RETURN

;****************************************************************


;***********************************************************************
;*                                                                     *
;* Routine: FCSTRK (Streak)                                            *
;* Purpose: Shift the CCD without reading for streak camera mode       *
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTRK  FC_BLOCK                  ! STRK

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        LDCNTRB 1                 ! STRK_TRACKS;
FCSTRKA LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

FCSTRKB WAIT
        LOAD    SLN | SET_B      ! SHIFT_SPEED ;Shift lines
        JUNTILA FCSTRKB

        JUNTILB FCSTRKA                         ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up

        WAIT
FCSTRKC LOAD   NO_OP | RTP | RS_B
        JUNTILA FCSTRKC

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSTRET (Streak with ET)                                   *
;* Purpose: Shift the CCD without reading for streak camera mode       *
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTRET FC_BLOCK                  ! STRK_ET

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        LDCNTRB 1                 ! STRK_TRACKS;
FCSTREA LDCNTRA 000               ! STREAK_ET   ;Get Expose Time count

FCSTRED WAIT
        LOAD NO_OP | SET_B                      ;Count Expose Time
        JUNTILA FCSTRED

        LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

FCSTREB WAIT
        LOAD    SLN | RS_B        ! SHIFT_SPEED ;Shift lines
        JUNTILA FCSTREB

        JUNTILB FCSTREA                         ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up

        WAIT
FCSTREC LOAD   NO_OP | RTP
        JUNTILA FCSTREC

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSTRSY (Streak with Sync)                                 *
;* Purpose: Shift the CCD without reading for streak camera mode       *
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTRSY FC_BLOCK                  ! STRK_SYNC

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        LDCNTRB 1                 ! STRK_TRACKS;
FCSTSYA LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

        WAIT
        LOAD WFS | SET_B          ;Wait for sync signal

        WAIT
        LOAD NO_OP                ;Recover from WFS

FCSTSYB WAIT
        LOAD    SLN | RS_B       ! SHIFT_SPEED ;Shift lines
        JUNTILA FCSTSYB

        JUNTILB FCSTSYA           ;Shift remaining tracks

        LDCNTRA 40                ;Give DAC time to catch up

        WAIT
FCSTSYC LOAD   NO_OP | RTP
        JUNTILA FCSTSYC

        WAIT
        LOAD    NO_OP | CUE       ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSTSE (Streak with sync and ET)                           *
;* Purpose: Shift the CCD without reading for streak camera mode       *
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTSET FC_BLOCK                  ! STRK_ET_SYNC

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        LDCNTRB 1                 ! STRK_TRACKS;
FCSTSEA LDCNTRA 000               ! STREAK_ET   ;Load exposure time

FCSTSED WAIT
        LOAD NO_OP                ;Count exposure time
        JUNTILA FCSTSED

        LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

        WAIT
        LOAD WFS | SET_B          ;Wait for sync signal

        WAIT
        LOAD NO_OP                ;Recover from WFS

FCSTSEB WAIT
        LOAD    SLN | RS_B       ! SHIFT_SPEED ;Shift lines
        JUNTILA FCSTSEB

        JUNTILB FCSTSEA           ;Shift remaining tracks

        LDCNTRA 40                ;Give DAC time to catch up

        WAIT
FCSTSEC LOAD   NO_OP | RTP
        JUNTILA FCSTSEC

        WAIT
        LOAD    NO_OP | CUE       ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSTOT (Streak On Trigger)                                 *
;* Purpose: Shift the CCD ONTRIG without reading for streak camera mode*
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTROT FC_BLOCK                   ! STRK_OT

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        WAIT
        LOAD    NO_OP | ARMTRG | SET_B          ;Reset trigger input

        GOSUB FCFLUSH

        LDCNTRB 1                 ! STRK_TRACKS;

FCSTROB WAIT
        LOAD    NO_OP                           ;Do nothing (except)
        JIFNOT  FCSTROB                         ;Wait for trigger input

FCSTROC LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

FCSTROD WAIT
        LOAD    SLN  | RS_B | SET_A ! SHIFT_SPEED ;Shift remaining lines
        JUNTILA FCSTROD

        JUNTILB FCSTROC                         ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up
        WAIT
FCSTROE LOAD   NO_OP | RTP
        JUNTILA FCSTROE

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSTOTE (Streak On Trigger with Expose Time)               *
;* Purpose: Shift the CCD ONTRIG without reading for streak camera mode*
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTOTE FC_BLOCK                   ! STRK_OT_ET

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        WAIT
        LOAD    NO_OP | ARMTRG | SET_B         ;Reset trigger input

        GOSUB FCFLUSH

        LDCNTRB 1                 ! STRK_TRACKS;

FCSTOTX WAIT
        LOAD    NO_OP                           ;Do nothing (except)
        JIFNOT  FCSTOTX                         ;Wait for trigger input

FCSTOEA LDCNTRA 000               ! STREAK_ET   ;Load exposure time

FCSTOEB WAIT
        LOAD NO_OP | SET_B | SET_A ;Count exposure time
        JUNTILA FCSTOEB

        LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

FCSTOEE WAIT
        LOAD    SLN  | RS_B       ! SHIFT_SPEED ;Shift remaining lines
        JUNTILA FCSTOEE

        JUNTILB FCSTOEA                         ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up
        WAIT
FCSTOEF LOAD   NO_OP | RTP
        JUNTILA FCSTOEF

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSTOTS (Streak On Trigger with Sync)                      *
;* Purpose: Shift the CCD ONTRIG without reading for streak camera mode*
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTOTS FC_BLOCK                   ! STRK_OT_SYNC

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        LDCNTRB 1                 ! STRK_TRACKS;

        WAIT
        LOAD    NO_OP | ARMTRG | SET_B         ;Reset trigger input

        GOSUB FCFLUSH

FCSTOSB WAIT
        LOAD    NO_OP                           ;Do nothing (except)
        JIFNOT  FCSTOSB                         ;Wait for trigger input

FCSTOSC LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

        WAIT
        LOAD WFS                  ;Wait for sync signal

        WAIT
        LOAD NO_OP                ;Recover from WFS

FCSTOSE WAIT
        LOAD    SLN | RS_B | SET_A ! SHIFT_SPEED ;Shift remaining lines
        JUNTILA FCSTOSE

        JUNTILB FCSTOSC                         ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up
        WAIT
FCSTOSF LOAD   NO_OP | RTP
        JUNTILA FCSTOSF

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSSOES (Streak On Trigger with ET and Sync)               *
;* Purpose: Shift the CCD ONTRIG without reading for streak camera mode*
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSOESS FC_BLOCK                   ! STRK_OT_ET_SYNC

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        LDCNTRB 1                 ! STRK_TRACKS

        WAIT
        LOAD    NO_OP | ARMTRG | SET_B         ;Reset trigger input

        GOSUB FCFLUSH

FCSOESB WAIT
        LOAD    NO_OP                           ;Do nothing (except)
        JIFNOT  FCSOESB                         ;Wait for trigger input

FCSOESC WAIT
        LOAD WFS                  ;Wait for sync signal

        WAIT
        LOAD NO_OP                ;Recover from WFS

        LDCNTRA 000               ! STREAK_ET   ;Load exposure time

FCSOESD WAIT
        LOAD NO_OP  | SET_A       ;Count exposure time
        JUNTILA FCSOESD

        LDCNTRA IDELTA            ! Y_DELTA     ;Height of track
FCSOESE WAIT
        LOAD    SLN | RS_B        ! SHIFT_SPEED ;Shift remaining lines
        JUNTILA FCSOESE

        JUNTILB FCSOESC                         ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up
        WAIT
FCSOESF LOAD   NO_OP | RTP
        JUNTILA FCSOESF

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;************************************************************************
;*                                                                      *
;* Routine: FCSPT (Streak Pre-Trigger)                                  *
;* Purpose: Shift the CCD ONTRIG without reading for streak camera mode *
;*                                                                      *
;************************************************************************

;*******  Frame Control program  ********************************

FCSPT   FC_BLOCK                   ! STRK_PT

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        WAIT
        LOAD    ARMTRG | SET_B    ;Reset trigger input

        GOSUB FCFLUSH

FCSPTA  WAIT                      ;Do keepclean until trigger received
        LOAD    SLN               ! SHIFT_SPEED
        GOSUB   CLEANSR
        JIFNOT  FCSPTA            ;Wait for trigger input

FCSPTB  WAIT                      ;Now wait for trigger low
        LOAD    SLN               ! SHIFT_SPEED ;If trigger low, goto next
        JIFNOT  FCSPTC            ;Else loop back to FCSPTB
        LDCNTRA 2
        JUNTILA FCSPTB

FCSPTC  LDCNTRB 1                 ! PT_TRACKS

FCSPTD  LDCNTRA IDELTA            ! Y_DELTA     ;Height of track
FCSPTE  WAIT
        LOAD    SLN | RS_B        ! SHIFT_SPEED ;Shift remaining lines
        JUNTILA FCSPTE

        JUNTILB FCSPTD                          ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up
        WAIT
FCSPTF  LOAD   NO_OP | RTP
        JUNTILA FCSPTF

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSTLCI (Streak with LCI)                                  *
;* Purpose: Shift the CCD without reading for streak camera mode       *
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTLCI FC_BLOCK                  ! STRK_LCI

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        LDCNTRB 1                 ! STRK_TRACKS;
;-------------------------------------------------------------------------
FCSTLCA WAIT                            ;Reset the Trigger Input flip-flop.
        LOAD    ARMTRG

        GOSUB   FCFLUSH                 ;Allow RST to take effect.

        WAIT                            ;Enable the Timer.
        LOAD    SHUTTER_BD | LCICNFG | ARM_PTRIG ! LCI_CMD

        GOSUB   FCFLUSH                 ;Allow TIMER_EN to take effect.

FCSTLC0 WAIT                            ;Wait for Pulse sequence complete.
        LOAD    OPEN | SET_A

        LDCNTRA 10                      ;30 us minimum between internal pulses

FCSTLC1 WAIT
        LOAD    NO_OP
        JUNTILA FCSTLC1

        WAIT
        LOAD    CLOSE

        JIFNOT  FCSTLC0

        LDCNTRA 13

FCSTLC2 WAIT                            ;Waste time for minimum execution time.
        LOAD    NO_OP                   ;(100us total for routine)
        JUNTILA FCSTLC2
;-------------------------------------------------------------------------
        LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

FCSTLCB WAIT
        LOAD    SLN | RS_B        ! SHIFT_SPEED ;Shift lines
        JUNTILA FCSTLCB

        JUNTILB FCSTLCA                         ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up

        WAIT
FCSTLCC LOAD   NO_OP | RTP
        JUNTILA FCSTLCC

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSTLCW (Streak with LCI in CW mode)                       *
;* Purpose: Shift the CCD without reading for streak camera mode       *
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSTLCW FC_BLOCK                  ! STRK_LCI_CW

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

        LDCNTRB 1                 ! STRK_TRACKS;
;-------------------------------------------------------------------------
FCSTLWA WAIT                            ;Reset the Trigger Input flip-flop.
        LOAD    ARMTRG

        GOSUB   FCFLUSH                 ;Allow RST to take effect.

        WAIT                            ;Enable the Timer.
        LOAD    SHUTTER_BD | LCICNFG | ARM_PTRIG ! LCI_CMD

        GOSUB   FCFLUSH                 ;Allow TIMER_EN to take effect.

FCSTLW0 WAIT                            ;Wait for Pulse sequence complete.
        LOAD    OPEN | SET_A

        LDCNTRA 10                      ;30 us minimum between internal pulses

FCSTLW1 WAIT
        LOAD    NO_OP
        JUNTILA FCSTLW1

        WAIT
        LOAD    CLOSE

        JIFNOT  FCSTLW0

        LDCNTRA 13

FCSTLW2 WAIT                            ;Waste time for minimum execution time.
        LOAD    NO_OP                   ;(100us total for routine)
        JUNTILA FCSTLW2
;-------------------------------------------------------------------------
        LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

FCSTLWB WAIT
        LOAD    SLN | RS_B        ! SHIFT_SPEED ;Shift lines
        JUNTILA FCSTLWB

        JUNTILB FCSTLWA                         ;Shift remaining tracks

        LDCNTRA 40                              ;Give DAC time to catch up

        WAIT
FCSTLWC LOAD   NO_OP | RTP
        JUNTILA FCSTLWC

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;****************************************************
; DMA Program
;*****************************************************

DCSTRK  DMA_BLOCK

        WAIT
        LOAD NOTHING
        END

;***********************************************************************
;*                                                                     *
;* Routine: FCSPDA                                                     *
;* Purpose: Shift the CCD without reading for PDA emulation mode       *
;*                                                                     *
;***********************************************************************

;*******  Frame Control program  ********************************

FCSPDA  FC_BLOCK

        WAIT
        LOAD    CLKBIAS_BD | RS_XYZ | A_CHANNEL ! BIAS_AB

FCSPDAA LDCNTRA IDELTA            ! Y_DELTA     ;Height of track

FCSPDAB WAIT
        LOAD    SLN               ! SHIFT_SPEED ;Shift remaining lines
        JUNTILA FCSPDAB

        GOSUB   RSSMXU            ! SER_ACQ     ;Read serial register

        JUNTILB FCSPDAA

        WAIT
        LOAD    NO_OP | CUE                     ;Signal DC processor
        END

;********  DMA Control program  *********************************

DCSPDA  DMA_BLOCK
        WAIT                                    ;Sync FC $ DC Ends.
        LOAD   NOTHING | LD_ADDR
        END
