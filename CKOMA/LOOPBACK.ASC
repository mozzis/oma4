;****************************************************************        
;*                                                              *
;*      This program (LOOPBACK.ASC) will walk ones across the   *
;*      loop back data path. This will confirm the basic        *
;*      operation of the complete system.                       *
;*                                                              *
;****************************************************************
 
;------- Detector Instructions ----------------------------------

NO_OP  EQU     %000000000000000000000000       ;No Operation.
OPEN   EQU     %000000000000000001000000       ;Open shutter.
CLOSE  EQU     %000000000000000010000000       ;Close shutter.
SET_A  EQU     %000000000000000100000000       ;Set Trigger A.
RS_A   EQU     %000000000000001000000000       ;Reset Trigger A.
SET_B  EQU     %000000000000010000000000       ;Set Trigger B.
RS_B   EQU     %000000000000100000000000       ;Reset Trigger B.
CUE    EQU     %100000000000000000000000       ;Cue DMA Controller.

;------- Address Calculation Instructions ----------------------

ADDA           EQU     %000000000000000000000000       ;Use A Pointers.
RPP            EQU     %000010000000000000000000       ;Reset Pixel Pointer A.
IPP            EQU     %000100000000000000000000       ;Increament Pixel Pointer A.
RTP            EQU     %000110000000000000000000       ;Reset Track Pointer A.
ITP            EQU     %001000000000000000000000       ;Increament Track Pointer A.
RPP_RTP        EQU     %001010000000000000000000       ;Reset A Pointers.
RPP_ITP        EQU     %001100000000000000000000       ;RS PPTRA & INC TPTRA.
IPP_RTP        EQU     %001110000000000000000000       ;INC PPTRA & RS TPTRA.
ADDB           EQU     %010000000000000000000000       ;Use B Pointers.
LPP            EQU     %010010000000000000000000       ;Load Pixel Pointer B.
DPP            EQU     %010100000000000000000000       ;Decreament Pixel Pointer B.
LTP            EQU     %010110000000000000000000       ;Load Track Pointer B.
DTP            EQU     %011000000000000000000000       ;Decreament Track Pointer B.
LPP_LTP        EQU     %011010000000000000000000       ;Load B Pointers.
LPP_DTP        EQU     %011100000000000000000000       ;LD PPTRB & DEC TPTRB.
DPP_LTP        EQU     %011110000000000000000000       ;DEC PPTRB & LD TPTRB.

;------- AUX Bus Address assignments ---------------------------

ANPROC         EQU     $001100                 ;Analog Processing bd.
ATOD           EQU     $001200                 ;A/D bd.
TESERVO        EQU     $001300                 ;TE servo bd.
AUX_4          EQU     $001400                 ;Not defined.
CLKBIAS        EQU     $001500                 ;Clock/Bias bd.
AUX_6          EQU     $001600                 ;Not defined.
SHUTTER        EQU     $001700                 ;Shutter Control bd.
AUX_8          EQU     $001800                 ;Not defined.
AUX_9          EQU     $001900                 ;Not defined.
AUX_10         EQU     $001A00                 ;Not defined.
AUX_11         EQU     $001B00                 ;Not defined.
AUX_12         EQU     $001C00                 ;Not defined.
PIAIN          EQU     $001D00                 ;PIA Input port.
PIAOUT         EQU     $001E00                 ;PIA Output port.
DETCNTL        EQU     $001F00                 ;Detector Controller bd.

;------- DMA Instructions --------------------------------------

NOTHING        EQU     %00000000               ;Do nothing.
REPLACE        EQU     %00000111               ; +A/D = Memory
AD_M_MEM       EQU     %00000010               ; +A/D - Memory = Memory
AD_P_MEM       EQU     %00000110               ; +A/D + Memory = Memory            
MEM_M_AD       EQU     %00000100               ; Memory-A/D = Memory
AD_M_BG        EQU     %00000011               ; +A/D - Bkgnd = Memory
AD_P_BG        EQU     %00000001               ; +A/D + Bkgnd = Memory
BG_M_AD        EQU     %00000101               ; Bkgnd - A/D = Memory

LD_BGB         EQU     %00001000               ;Load background base.
LD_FB          EQU     %00010000               ;Load frame base.
LD_ADDR                                                                                        EQU             %00011000       ;Load both bases.

;------- General Equates ----------------------------------------

DCADDR         EQU     %000000000000000000000001       ;DC Proc. loads address.
FCADDR         EQU     %000000000000000000000000       ;FC Proc. loads address.
LB             EQU     %000000000000000000000000       ;Set Pipeline for Loopback.
QNS            EQU     %000000000000000000000110       ;Set Pipeline for QNS data.
XMIT13         EQU     %000000000000000001101000       ;Xmit 13 bits to detector.
REC18          EQU     %000000111111111100000000       ;Receive 18 data bits.
RECTRIG        EQU     %100000000000000000000000       ;Receive the trigger bit.
RECTEMP        EQU     %010000000000000000000000       ;Receive the Temp locked bit.
DB_PREC        EQU     %010000000000000000000000       ;Double precision.

;***************************************************************
;*                                                             *
;* Routine:    INIT, Initialize the system.                    *
;* Purpose:                                                    *
;*     To initialise the FC processor and the detector,        *
;*     and to synchronise with the DC and DAC processors.      *
;*                                                             *
;***************************************************************

;********  Frame Control program  ******************************

FCINIT FC_BLOCK                                              
       WAIT                                    ;Configure ASIC.
       LDCFG   DCADDR | LB | XMIT13 | REC18  
       LDPCNT  DB_PREC
       LDTRKL  16
       LOAD    NO_OP                                           

       WAIT                                    ;Insure the detector is in
       LOAD    DETCNTL | 0                     ; Loop-back mode.
       LDCNTRB 20

FC1    WAIT                                    ;Send NOPs to kill time.
       LOAD    NO_OP
       JUNTILB FC1

       WAIT                                    ;Sync FC & DC Ends.
       LOAD    NO_OP | CUE
       END                                     

;********  DMA Control program  *********************************

DCINIT DMA_BLOCK
       WAIT                                    ;Sync FC & DC Ends.
       LOAD    NOTHING
       END
;
;****************************************************************
;*                                                                                                             *
;* Routine:    LB ,Loop-back                                   *
;* Purpose:     To walk ones across the loopback data path.     *
;*                                                              *
;****************************************************************
;
;*******  Frame Control program  ********************************
;
;      FC_ORG  $7E00
FCLB   FC_BLOCK
       WAIT                                                                    ;Reset Address pointers
       LOAD    NO_OP | RPP_RTP | CUE           ; & load Base address.

       GOSUB   FCWALK

       WAIT                                                                    ;Checkout Track pointer.
       LOAD    NO_OP | RPP_ITP                                 

       GOSUB   FCWALK
       LDCNTRA 10
 
FCLB1  WAIT                                                                    ;Give DAC time.
       LOAD    NO_OP                                                           
       JUNTILA FCLB1
 
       WAIT                                    ;Sync. FC & DC End's.
       LOAD    NO_OP | CUE
       END

;----------------------------------------------------------------
 
FCWALK WAIT                                    ;Walk ones.
       LOAD    %00000000 | CUE
 
       WAIT
       LOAD    IPP | %00000001 | CUE
 
       WAIT
       LOAD    IPP | %00000010 | CUE
 
       WAIT
       LOAD    IPP | %00000100 | CUE

       WAIT
       LOAD    IPP | %00001000 | CUE
 
       WAIT
       LOAD    IPP | %00010000 | CUE

       WAIT
       LOAD    IPP | %00100000 | CUE
       RETURN
 
;*******  DMA Control program  **********************************
 
;      DMA_ORG $7E00
DCLB   DMA_BLOCK
       WAIT                                    ;Load new address.
       LOAD    NOTHING | LD_ADDR 
       LDCNTRA 7

DCLB1  WAIT                                    ;Replace walking ones.
       LOAD    REPLACE         
       JUNTILA DCLB1  
       LDCNTRB 7

DCLB2  WAIT                                    ;Replace walking ones.
       LOAD    REPLACE         
       JUNTILB DCLB2  

       WAIT                                    ;Sync. FC & DC End's.
       LOAD    NOTHING
       END

;*******  DMA Control program  **********************************
 
DCLBSB  DMA_BLOCK
        WAIT                                    ;Load new address.
        LOAD    NOTHING | LD_ADDR 
        LDCNTRA 7

DCLBSB1 WAIT                                    ;Subtract walking ones.
        LOAD    AD_M_BG        
        JUNTILA DCLBSB1
        LDCNTRB 7

DCLBSB2 WAIT                                    ;Subtract walking ones.
        LOAD    AD_M_BG        
        JUNTILB DCLBSB2

        WAIT                                    ;Sync. FC & DC End's.
        LOAD    NOTHING
        END

;*******  DMA Control program  **********************************
 
DCLBAM  DMA_BLOCK
        WAIT                                    ;Load new address.
        LOAD    NOTHING | LD_ADDR 
        LDCNTRA 7

DCLBAM1 WAIT                                    ;Add walking ones.
        LOAD    AD_P_MEM
        JUNTILA DCLBAM1
        LDCNTRB 7

DCLBAM2 WAIT                                    ;Add walking ones.
        LOAD    AD_P_MEM
        JUNTILB DCLBAM2

        WAIT                                    ;Sync. FC & DC End's.
        LOAD    NOTHING
        END


