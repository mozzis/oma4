;****************************************************************        
;*                                                              *
;*      This program (CKAD.DAC) will walk ones across the       *
;*      Detector Controller's Analog to Digital port.           *
;*                                                              *
;****************************************************************

LINK	'CKAD.ABJ'
INCLUDE 'OPS.ADD'              

;------- ASIC register assignments. ----------------------------

FCPROG  EQU     $30001                  ;FC Program register, 2 bytes.
FCMASK  EQU     $30005                  ;FC Output Mask register, 2 bytes.
DCPROG  EQU     $30009                  ;DC Program register, 2 bytes.
BGBASE  EQU     $3000D                  ;Background Base register, 3 bytes.
FBASE   EQU     $30013                  ;Frame Base Register, 3 bytes.

MEM1    EQU     $30                     ;First memory.
CNTR    EQU     $800080                 ;DAC Loop counter.     
MSG     EQU     $800000                 ;Message area.
PCINT   EQU     $10000                  ;IBM Interrupt request area.

MEMADDR EQU     $800090                 ;Address Pointer varible, L-word.
TEMP    EQU     $800100                 ;Temp varible.

DATA    EQU     $800030                 ;Address of first data point.

;------- Erase data memory -------------------------------------

BEGIN	DAC_BLOCK
        MOVE L	#$800000,MEMADDR        ;Initialize address pointer.
	DO #$20 			;Erase Data memory.
	  MOVE W  #0,[MEMADDR]
	  ADD L  #2,MEMADDR
	LOOP

;------- Write Passed message ----------------------------------

        MOVE W  #$2020,MSG              ;Space characters.
        MOVE W  #$2020,MSG+2            ;Space characters.
        MOVE W  #$2020,MSG+4            ;Space characters.
        MOVE W  #$2020,MSG+6            ;Space characters.
        MOVE W  #$2D20,MSG+8            ;Space characters.
        MOVE W  #$4120,MSG+10           ; A characters.
        MOVE W  #$442F,MSG+12           ;/D characters.
        MOVE W  #$2020,MSG+14           ;   characters.
        MOVE W  #$6554,MSG+16           ;Te characters.
        MOVE W  #$7473,MSG+18           ;st characters.
        MOVE W  #$203A,MSG+20           ;:  characters.
        MOVE W  #$4150,MSG+22           ;PA characters.
        MOVE W  #$5353,MSG+24           ;SS characters.
        MOVE W  #$4445,MSG+26           ;ED characters.
        MOVE W  #$0000,MSG+28           ;End of string.

;------- Erase data memory -------------------------------------

START   MOVE L	#$800030,MEMADDR        ;Initialize address pointer.
	DO #$200 			;Erase Data memory.
	  MOVE W  #0,[MEMADDR]
	  ADD L  #2,MEMADDR
	LOOP

;------- Synchronize System ------------------------------------

        MOVE W  #FCINIT,FCPROG ASIC     ;Sync. DAC w/ASIC.
        WAIT_FC
        MOVE W  #FCINIT,FCPROG ASIC

MASK    WAIT_FC                         ;No FC mask.
        MOVE W  #$FFFF,FCMASK ASIC      
        MOVE W  #FCINIT,FCPROG ASIC     
        MOVE W  #DCINIT,DCPROG ASIC	

INIT    WAIT_DMA                        ;Do Initialization.
        MOVE W  #FCINIT,FCPROG ASIC     
        MOVE W  #DCINIT,DCPROG ASIC	
	MOVE W  #0,CNTR

MAIN    DO #$400
          WAIT_DMA                        ;Do A/D test.
          MOVE W  #FCAD,FCPROG ASIC
          MOVE W  #DCAD,DCPROG ASIC
          MOVE L  #MEM1,FBASE ASIC 
	  ADD W	#1,CNTR
        LOOP

;------- Check Data memory for proper signature  ----------------

        WAIT_DMA                        ;Wait for test completed.
        MOVE W  #FCINIT,FCPROG ASIC     
        MOVE W  #DCINIT,DCPROG ASIC	

        WAIT_DMA                        ;Wait for test completed.
        COMP L  #$04000000,DATA        ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$08000000,DATA + 4    ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$10000000,DATA + 8    ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$20000000,DATA + 12   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$40000000,DATA + 16   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$80000000,DATA + 20   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000001,DATA + 24   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000002,DATA + 28   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000004,DATA + 32   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000008,DATA + 36   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000010,DATA + 40   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000020,DATA + 44   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000040,DATA + 48   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000080,DATA + 52   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000100,DATA + 56   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000200,DATA + 60   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000400,DATA + 64   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

        COMP L  #$00000800,DATA + 68   ;Check for valid pattern.
        BGT     EOP                   ;Jump if not valid.
        BLT     EOP        

;------- Interrupt the IBM  ------------------------------------

        MOVE W  #0,PCINT
        GOTO    START                   ;Continue until failure or reset.

;------- Write Failed message ----------------------------------

EOP     MOVE W  #$4146,MSG+22           ;FA characters.
        MOVE W  #$4C49,MSG+24           ;IE characters.
        MOVE W  #$4445,MSG+26           ;ED characters.

        MOVE W  #0,PCINT
	DONE
